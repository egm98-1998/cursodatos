---
title: "Mi primera pagina web"
author: "Eunis GUELAC MENDOZA"
format:
  html:
   toc: true
   toc-location: left
   embed-resources: true
   number-sections: true
   output-file: index
editor_options: 
  chunk_output_type: console
---


# Mi página web

1.  Tener mi proyecto
1.  Conectar mi proyecto a GitHub
1.  Tener un archivo en html llamado "index.html"
1.  Hacer push al repositorio
1.  Activar GitHub pages



# analisis de datos
## importar data

```{r}
fb <- read.csv(file = "LA MOLINA 2014 POTATO WUE (FB) - fb.csv", header = TRUE, sep = "," )


str(fb)


```

# Modelo lineal

```{r}
library(ggplot2)

modelo <- lm(formula = lfa ~ block + geno + riego*geno , data = fb)

anova(modelo)

str(fb)

plot(modelo)

```

# Diagrama de caja

```{r}
library(ggplot2)

ggplot(fb, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
  geom_boxplot() +
  labs(x = "genotipo" , y = "LFA" , fill = "riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Boxplot de LFA por genotipo y riego")



```



#  Comparación De Medias

```{r}
library(agricolae)  
library(tidyverse)


tukey_result <- HSD.test(modelo, c("geno", "riego"), group = TRUE)
print(tukey_result)



str (tukey_result) 

mc <- tukey_result$groups %>% 
  rownames_to_column("trat") %>% 
  separate(trat, c("riego", "variedad")) 


str (mc)

```


##  Gráfico en ggplot2

```{r}
library(ggplot2)

ggplot(mc, aes(x = riego, y = lfa , fill = variedad)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +  # Barras agrupadas por variedad
  geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5, size = 3) +  # Etiquetas sobre las barras
  labs(title = "Producción de LFA por Riego y Variedad", x = "variedad", y = "LEAFDW", fill = "riego") +  # Etiquetas de los ejes y título
  scale_fill_manual(values = c("irrigado" = "tomato", "sequia" = "turquoise3")) +  # Colores personalizados para las variedades
  theme_minimal() +  # Tema minimalista
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```


#  comparacion de medias: emmeans 

```{r}
library(emmeans)
 
mc <- emmeans(modelo,~ riego*geno)
mc <- emmeans(modelo, ~ riego|geno) 

mc <- emmeans(modelo, ~ riego|geno) %>% 
  as.data.frame()

mc
```

##  Gráfico

```{r}
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  # geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
  labs(x = "Variedad", y = "LFA", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


# Análisis multivariado (Mas de 2 variables): Por correlación y PCA

## Análisis de correlación

```{r}

variables_cuantitativas <- fb[, c("lfa", "hi", "leafdw", "wue")]

matriz_correlacion <- cor(variables_cuantitativas, method = "pearson")

print(matriz_correlacion)

library(corrplot)

corrplot(matriz_correlacion, method = "circle", type = "upper", 
         tl.col = "black", tl.srt = 45, 
         title = "Matriz de Correlación", mar = c(0, 0, 1, 0))
```


```{r}
library(tidyverse)
library(psych)

fb %>%
  select_if(is.numeric) %>%
  dplyr::select(!c("block")) %>%
  pairs.panels(x = .
      , hist.col="blue"
      , pch = 21
      , stars = TRUE 
      , scale = FALSE 
      , lm= TRUE
      )
```


## PCA análisis de componentes principales

```{r}
variables_cuantitativas <- fb[sapply(fb, is.numeric)]

variables_cuantitativas_estandarizadas <- scale(variables_cuantitativas)

pca_result <- prcomp(variables_cuantitativas_estandarizadas, center = TRUE, scale. = TRUE)
summary(pca_result)
screeplot(pca_result, type = "lines", main = "Scree Plot")

library(ggplot2)

biplot(pca_result, main = "Biplot del PCA", cex = 0.7)

library(ggfortify)

autoplot(pca_result, data = fb, colour = 'black', loadings = TRUE, loadings.label = TRUE, 
         loadings.label.size = 3, main = "Gráfico de Componentes Principales")

```

### PCA DOS EN UNO

```{r}
library(FactoMineR)
library(cowplot)

mv <- fb %>%
  group_by(riego, geno) %>%
  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>%
  PCA(scale.unit = T, quali.sup = c(1:4), graph = F)

p1 <- plot(mv,
           choix="ind",
           habillage=1,
           label = "ind")

p2 <- plot(mv,
           choix="var")

list(p1, p2) %>%
  plot_grid(plotlist = ., nrow = 1)

```







